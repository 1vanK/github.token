# Данный workflow демонстрирует запись в текущий репозиторий

# Отображаемое имя workflow
# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#name
name: Запись в текущий репозиторий

# Условия, при которых будет запущен workflow
on:
  # Запускается вручную (через вкладку Actions)
  # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#workflow_dispatch
  workflow_dispatch:

# Workflow состоит из jobs, которые могут выполняться последовательно или параллельно
jobs:
  # Идентификатор job
  # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_id
  RABOTA:
    # Будет запущен на виртуальной машине с последней версией Ubuntu
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idruns-on
    runs-on: ubuntu-latest

    # Отображаемое имя job 
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idname
    name: Демонстрация использования github.token

    # Job состоит из последовательности задач
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idsteps
    steps:

    - name: Модифицируем текущий репозиторий # Отображаемое имя step

      run: |
        # При клонировании репозитория возможно одновременно авторизоваться, чтобы без авторизации
        # выполнять команду git push.
        # Но так делать нельзя, так как токен будет в открытом виде сохранён в файл repo/.git/config
        # https://github.blog/2012-09-21-easier-builds-and-deployments-using-git-over-https-and-oauth/
        # P.S. Обратите внимание, что методы авторизации, описанные в статье, не работают для github.token

        # Скачиваем текущий репозиторий в папку this_repo с одновременной авторизацией
        #git clone https://any_user_name:${{github.token}}@github.com/${{github.repository}} this_repo

        # Скачиваем текущий репозиторий в папку this_repo без авторизации
        git clone https://github.com/${{github.repository}} this_repo

        # Сохраняем текущее время в переменную NOW
        NOW=$(date)

        # Дописываем время в конец файла result.txt
        echo $NOW >> this_repo/result.txt

        # Автор коммита
        git config --global user.email [бот]@users.noreply.github.com
        git config --global user.name [Бот]

        # Отправляем изменения в текущий репозиторий
        cd this_repo
        git add -A
        git commit -m "Update $NOW" || : # Создаём коммит и перехватываем ошибку, если в репозитории нет изменений
        git push https://.:${{github.token}}@github.com/${{github.repository}}
        cd ..
